ROSTemplateFormatVersion: '2015-09-01'
Transform: Aliyun::Terraform-v1.5
Description:
  zh-cn: 构建高性能秒杀系统。
  en: Build a high-performance flash sale system.
Parameters:
  zone_id_1:
    Type: String
    AssociationProperty: ALIYUN::ECS::Instance::ZoneId
    AssociationPropertyMetadata:
      ExclusiveTo:
      - zone_id_2
    Label:
      en: VSwitch Availability Zone 1
      zh-cn: 交换机可用区1
  zone_id_2:
    Type: String
    AssociationProperty: ALIYUN::ECS::Instance::ZoneId
    AssociationPropertyMetadata:
      ExclusiveTo:
      - zone_id_1
    Label:
      en: VSwitch Availability Zone 2
      zh-cn: 交换机可用区2
  ecs_instance_type_1:
    Type: String
    Label:
      en: Instance Type
      zh-cn: 实例规格
    Description:
      en: <font color='blue'><b>Before selecting a model, please confirm whether
        the model is in stock in the current availability zone. To save testing 
        costs, it is recommended to use a model with 2 cores and 4G memory, for 
        example:ecs.c7.large</b></font>.
      zh-cn: <font 
        color='blue'><b>选择机型前请先确认当前可用区下该机型是否有库存，为节省测试成本，推荐使用2核4G内存的规格，例如：ecs.c7.large</b></font>。
    AssociationProperty: ALIYUN::ECS::Instance::InstanceType
    AssociationPropertyMetadata:
      Constraints:
        Memory:
        - 4
        - 6
        - 8
        - 10
        - 12
        - 14
        - 16
        - 18
        - 20
        - 22
        - 24
        - 26
        - 28
        - 30
        - 32
      ZoneId: zone_id_1
  ecs_instance_type_2:
    Type: String
    Label:
      en: Instance Type
      zh-cn: 实例规格
    Description:
      en: <font color='blue'><b>Before selecting a model, please confirm whether
        the model is in stock in the current availability zone. To save testing 
        costs, it is recommended to use a model with 2 cores and 4G memory, for 
        example:ecs.c7.large</b></font>.
      zh-cn: <font 
        color='blue'><b>选择机型前请先确认当前可用区下该机型是否有库存，为节省测试成本，推荐使用2核4G内存的规格，例如：ecs.c7.large</b></font>。
    AssociationProperty: ALIYUN::ECS::Instance::InstanceType
    AssociationPropertyMetadata:
      Constraints:
        Memory:
        - 4
        - 6
        - 8
        - 10
        - 12
        - 14
        - 16
        - 18
        - 20
        - 22
        - 24
        - 26
        - 28
        - 30
        - 32
      ZoneId: zone_id_2
  ecs_instance_password:
    Type: String
    Label:
      en: root account password
      zh-cn: root 账号密码
    Description:
      en: Server root account login password, Length 8-30, must contain 
        three(Capital letters, lowercase letters, numbers, 
        ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ Special symbol in).
      zh-cn: 服务器root账号登录密码,长度8-30，必须包含三项（大写字母、小写字母、数字、 
        ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ 中的特殊符号）。
    ConstraintDescription:
      en: Length 8-30, must contain three(Capital letters, lowercase letters, 
        numbers, ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ Special symbol in).
      zh-cn: 长度8-30，必须包含三项（大写字母、小写字母、数字、 ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ 中的特殊符号）。
    AllowedPattern: "[0-9A-Za-z\\_\\-\\&:;'<>,=%`~!@#\\(\\)\\$\\^\\*\\+\\|\\{\\}\\\
      [\\]\\.\\?\\/]+$"
    MinLength: 8
    MaxLength: 30
    NoEcho: true
  polar_db_node_class:
    Type: String
    Label:
      en: PolarDB Node Class
      zh-cn: PolarDB Mysql资源规格大小
    Description:
      en: <font color='blue'><b>Before selecting a model, please confirm whether
        the model is in stock in the current availability zone. To save testing 
        costs, it is recommended to use a model with 2 cores and 4G memory, for 
        example:polar.mysql.g2.medium</b></font>, see detail:<a 
        href='https://help.aliyun.com/zh/polardb/polardb-for-mysql/how-to-select-generic-and-exclusive-specifications'
        target='_blank'><b><font color='red'>Specification 
        inquiry</font></b></a>.
      zh-cn: <font 
        color='blue'><b>选择机型前请先确认当前可用区下该机型是否有库存，为节省测试成本，推荐使用2核4G内存的规格，例如：polar.mysql.g2.medium</b></font>，<a
        href='https://help.aliyun.com/zh/polardb/polardb-for-mysql/how-to-select-generic-and-exclusive-specifications'
        target='_blank'><b><font color='red'>规格查询</font></b></a>。
    AssociationProperty: ALIYUN::POLARDB::DBCluster::DBNodeClass
    AssociationPropertyMetadata:
      ZoneId: zone_id_1
      CommodityCode: polardb_payg
    Default: polar.mysql.g2.medium
  polar_account_name:
    Type: String
    Label:
      en: Database Account
      zh-cn: 数据库账号
    Description:
      en: Maximum 16 characters,Consists of a lowercase letter, a number, an 
        underscore, a letter beginning, a letter or a number ending.<br><b>note：
        <font color='blue'>Keywords cannot be used, e.g.:admin/root</font></b>
      zh-cn: 最长16个字符, 由小写字母，数字、下划线组成、字母开头，字母或数字结尾。<br><b>注： <font 
        color='blue'>关键字不能用，如：admin/root</font></b>
    Default: polardb_admin
  db_password:
    Type: String
    Label:
      en: Account password
      zh-cn: 数据库账号密码
    Description:
      en: Length 8-32 characters, can contain size letters, Numbers and special 
        symbols (including:!@#$%^&*-+=_).
      zh-cn: 长度8-32个字符,可包含大小字母、数字及特殊符号（包含：!@#$%^&*-+=_）。
    ConstraintDescription:
      en: Length 8-32, can contain size letters, Numbers and special symbols 
        (including:!@#$%^&*-+=_).
      zh-cn: 长度8-32,可包含大小字母、数字及特殊符号（包含：!@#$%^&*-+=_）。
    MinLength: '8'
    MaxLength: '32'
    NoEcho: true
  redis_class:
    Type: String
    Label:
      en: Tair Specifications
      zh-cn: Tair 规格
    Description:
      en: <font color='blue'><b>Before selecting a model, please confirm whether
        the model is in stock in the current availability zone. To save testing 
        costs, it is recommended to use a model with 2G memory, for 
        example:tair.rdb.2g</b></font>, see detail:<a 
        href='https://help.aliyun.com/zh/redis/product-overview/enhanced-performance'
        target='_blank'><b><font color='red'>Specification 
        inquiry</font></b></a>.
      zh-cn: <font 
        color='blue'><b>选择机型前请先确认当前可用区下该机型是否有库存，为节省测试成本，推荐使用2GB的规格，例如：tair.rdb.2g</b></font>，<a
        href='https://help.aliyun.com/zh/redis/product-overview/enhanced-performance'
        target='_blank'><b><font color='red'>规格查询</font></b></a>。
    AssociationProperty: ALIYUN::REDIS::Instance::InstanceClass
    AssociationPropertyMetadata:
      Engine: Redis
      ProductType: Tair_rdb
      InstanceChargeType: PostPaid
      ZoneId: ${zone_id_1}
      OrderType: BUY
    Default: tair.rdb.2g
  redis_password:
    NoEcho: true
    Type: String
    Description:
      en: RDS user password, Length 8-30, must contain three(Capital letters, 
        lowercase letters, numbers, ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ Special 
        symbol in)
      zh-cn: 数据库账号密码，长度8-30，必须包含三项（大写字母、小写字母、数字、 ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ 
        中的特殊符号）
    Label:
      en: Tair Instance Password
      zh-cn: Tair 数据库密码
    ConstraintDescription:
      en: Length 8-30, must contain three(Capital letters, lowercase letters, 
        numbers, ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ Special symbol in)
      zh-cn: 必须包含三种及以上类型：大写字母、小写字母、数字、特殊符号。长度为8～32位。特殊字符包括!@#$%^&*()_+-=
    AssociationProperty: ALIYUN::RDS::Instance::AccountPassword
  mse_license_key:
    Type: String
    Label:
      en: Current region License Key
      zh-cn: 当前环境 License Key
    Description:
      en: Log on <a href="https://mse.console.aliyun.com/#/msc/home" 
        target="_blank"><b><font color='blue'>MSE console </font></a>, Click 
        Governance Center > Overview in the left navigation bar. On the top menu
        bar, select the region where the ROS resource stack is created. Click 
        the License Key link in the upper right corner of the overview page to 
        obtain the MSE License Key.
      zh-cn: 登录<a href='https://mse.console.aliyun.com/#/msc/home' 
        target='_blank'><b><font color='blue'>微服务引擎MSE控制台</font></a>，点击左侧导航栏治理中心
        > 概览，在顶部菜单栏，选择创建ROS资源栈对应的地域, 在概览页面点击右上角查看 License Key 链接，获取MSE License 
        Key。
Metadata:
  ALIYUN::ROS::Interface:
    Outputs:
    - alb_public_ip_address
    - ecs_login_address
    ParameterGroups:
    - Parameters:
      - zone_id_1
      - ecs_instance_type_1
      - zone_id_2
      - ecs_instance_type_2
      - ecs_instance_password
      Label:
        default:
          zh-cn: ECS 配置
          en: ECS Configuration
    - Parameters:
      - polar_db_node_class
      - polar_account_name
      - db_password
      Label:
        default:
          zh-cn: PolarDB 配置
          en: PolarDB Configuration
    - Parameters:
      - redis_class
      - redis_password
      Label:
        default:
          zh-cn: Tair 配置
          en: Tair Configuration
    - Parameters:
      - mse_license_key
      Label:
        default:
          zh-cn: Mse 配置
          en: Mse Configuration
    TemplateTags:
    - acs:technical-solution:high-availability-architecture:构建高性能秒杀系统-tech_solu_181
    Hidden:
    - vpc_cidr_block
    - vswitch_1_cidr_block
    - vswitch_2_cidr_block
    - vswitch_3_cidr_block
    - vswitch_4_cidr_block
Workspace:
  variable.tf: |-
    # Parameters
    variable "zone_id_1" {
      type        = string
      description = "交换机可用区1"
      default     = "cn-hangzhou-j"
    }

    variable "zone_id_2" {
      type        = string
      description = "交换机可用区2"
      default     = "cn-hangzhou-k"
    }

    variable "ecs_instance_type_1" {
      type        = string
      description = "实例规格1。选择机型前请先确认当前可用区下该机型是否有库存，为节省测试成本，推荐使用2核4G内存的规格，例如：ecs.c7.large"
      default     = "ecs.c6.large"
    }

    variable "ecs_instance_type_2" {
      type        = string
      description = "实例规格2。选择机型前请先确认当前可用区下该机型是否有库存，为节省测试成本，推荐使用2核4G内存的规格，例如：ecs.c7.large"
      default     = "ecs.c6.large"
    }

    variable "ecs_instance_password" {
      type        = string
      description = "服务器root账号登录密码,长度8-30，必须包含三项（大写字母、小写字母、数字、 ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ 中的特殊符号）"
      sensitive   = true
      validation {
        condition     = can(regex("^[0-9A-Za-z_\\-&:;'<>,=%`~!@#()$^*+|{}\\[\\].?/]+$", var.ecs_instance_password)) && length(var.ecs_instance_password) >= 8 && length(var.ecs_instance_password) <= 30
        error_message = "长度8-30，必须包含三项（大写字母、小写字母、数字、 ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ 中的特殊符号）"
      }
    }

    variable "polar_db_node_class" {
      type        = string
      description = "PolarDB Mysql资源规格大小。选择机型前请先确认当前可用区下该机型是否有库存，为节省测试成本，推荐使用2核4G内存的规格，例如：polar.mysql.g2.medium"
      default     = "polar.mysql.g2.medium"
    }

    variable "polar_account_name" {
      type        = string
      description = "数据库账号。最长16个字符, 由小写字母，数字、下划线组成、字母开头，字母或数字结尾。注：关键字不能用，如：admin/root"
      default     = "polardb_admin"
      validation {
        condition     = can(regex("^[a-z][a-z0-9_]*[a-z0-9]$", var.polar_account_name)) && length(var.polar_account_name) <= 16
        error_message = "最长16个字符, 由小写字母，数字、下划线组成、字母开头，字母或数字结尾"
      }
    }

    variable "db_password" {
      type        = string
      description = "数据库账号密码。长度8-32个字符,可包含大小字母、数字及特殊符号（包含：!@#$%^&*-+=_）"
      sensitive   = true
      validation {
        condition     = can(regex("^[a-zA-Z0-9!@#$%^&*\\-+=_]+$", var.db_password)) && length(var.db_password) >= 8 && length(var.db_password) <= 32
        error_message = "长度8-32,可包含大小字母、数字及特殊符号（包含：!@#$%^&*-+=_）"
      }
    }

    variable "redis_class" {
      type        = string
      description = "Tair 规格。选择机型前请先确认当前可用区下该机型是否有库存，为节省测试成本，推荐使用2GB的规格，例如：tair.rdb.2g"
      default     = "tair.rdb.2g"
    }

    variable "redis_password" {
      type        = string
      description = "Tair 数据库密码。长度8-30，必须包含三项（大写字母、小写字母、数字、 ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ 中的特殊符号）"
      sensitive   = true
      validation {
        condition     = can(regex("^[0-9A-Za-z_\\-&:;'<>,=%`~!@#()$^*+|{}\\[\\].?/]+$", var.redis_password)) && length(var.redis_password) >= 8 && length(var.redis_password) <= 30
        error_message = "长度8-30，必须包含三项（大写字母、小写字母、数字、 ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ 中的特殊符号）"
      }
    }

    variable "mse_license_key" {
      type        = string
      description = "当前环境 License Key。登录微服务引擎MSE控制台，点击左侧导航栏治理中心 > 概览，在顶部菜单栏，选择创建ROS资源栈对应的地域, 在概览页面点击右上角查看 License Key 链接，获取MSE License Key"
    }

    # VPC and VSwitch CIDR blocks
    variable "vpc_cidr_block" {
      type        = string
      description = "VPC的CIDR块"
      default     = "192.168.0.0/16"
    }

    variable "vswitch_1_cidr_block" {
      type        = string
      description = "第一个交换机的CIDR块"
      default     = "192.168.1.0/24"
    }

    variable "vswitch_2_cidr_block" {
      type        = string
      description = "第二个交换机的CIDR块"
      default     = "192.168.2.0/24"
    }

    variable "vswitch_3_cidr_block" {
      type        = string
      description = "第三个交换机的CIDR块"
      default     = "192.168.3.0/24"
    }

    variable "vswitch_4_cidr_block" {
      type        = string
      description = "第四个交换机的CIDR块"
      default     = "192.168.4.0/24"
    }
  main.tf: |-
    provider "alicloud" {
    }

    resource "random_id" "suffix" {
      byte_length = 8
    }

    data "alicloud_images" "default" {
      name_regex  = "^aliyun_3_x64_20G_alibase_.*"
      most_recent = true
      owners      = "system"
    }

    locals {
      common_name    = random_id.suffix.hex
      install_script = <<-SCRIPT
    #!/bin/bash
    cat << EOF >> ~/.bash_profile
    export DB_URL="${alicloud_polardb_cluster.polar_db_cluster.connection_string}:3306/flashsale"
    export DB_USERNAME="${var.polar_account_name}"
    export DB_PASSWORD="${var.db_password}"
    export REDIS_HOST="${alicloud_kvstore_instance.redis_instance.connection_domain}"
    export REDIS_PASSWORD="${var.redis_password}"
    export NACOS_URL="${alicloud_mse_cluster.mse_micro_registry_instance.cluster_id}-nacos-ans.mse.aliyuncs.com:8848"
    export ROCKETMQ_ENDPOINT="${alicloud_rocketmq_instance.rocketmq.network_info.0.endpoints.0.endpoint_url}"
    export ROCKETMQ_USERNAME="admin"
    export ROCKETMQ_PASSWORD="${var.redis_password}"
    export MSE_LICENSE_KEY="${var.mse_license_key}"
    export ROS_DEPLOY=true
    EOF

    source ~/.bash_profile

    curl -fsSL https://help-static-aliyun-doc.aliyuncs.com/install-script/flashsale/install.sh | bash
    SCRIPT
    }


    # Data source for current region
    data "alicloud_regions" "current" {
      current = true
    }

    # VPC Resources
    resource "alicloud_vpc" "vpc" {
      vpc_name   = "VPC-${local.common_name}"
      cidr_block = var.vpc_cidr_block
    }

    resource "alicloud_vswitch" "vswitch" {
      vpc_id       = alicloud_vpc.vpc.id
      cidr_block   = var.vswitch_1_cidr_block
      zone_id      = var.zone_id_1
      vswitch_name = "vsw_001-${local.common_name}"
    }

    resource "alicloud_vswitch" "vswitch2" {
      vpc_id       = alicloud_vpc.vpc.id
      cidr_block   = var.vswitch_2_cidr_block
      zone_id      = var.zone_id_2
      vswitch_name = "vsw_002-${local.common_name}"
    }

    resource "alicloud_vswitch" "vswitch3" {
      vpc_id       = alicloud_vpc.vpc.id
      cidr_block   = var.vswitch_3_cidr_block
      zone_id      = var.zone_id_1
      vswitch_name = "vsw_003-${local.common_name}"
    }

    resource "alicloud_vswitch" "vswitch4" {
      vpc_id       = alicloud_vpc.vpc.id
      cidr_block   = var.vswitch_4_cidr_block
      zone_id      = var.zone_id_2
      vswitch_name = "vsw_004-${local.common_name}"
    }

    # Security Group
    resource "alicloud_security_group" "security_group" {
      vpc_id              = alicloud_vpc.vpc.id
      security_group_name = "SecurityGroup_1-${local.common_name}"
      security_group_type = "normal"
    }

    # ECS Instance Groups
    resource "alicloud_instance" "ecs_instance_group1" {
      instance_name              = "ecs-group1-${local.common_name}"
      system_disk_category       = "cloud_essd"
      system_disk_size           = 40
      image_id                   = data.alicloud_images.default.images.0.id
      vswitch_id                 = alicloud_vswitch.vswitch.id
      password                   = var.ecs_instance_password
      instance_type              = var.ecs_instance_type_1
      internet_max_bandwidth_out = 5
      security_groups            = [alicloud_security_group.security_group.id]
      availability_zone          = var.zone_id_1
    }

    resource "alicloud_instance" "ecs_instance_group2" {
      instance_name              = "ecs-group2-${local.common_name}"
      system_disk_category       = "cloud_essd"
      system_disk_size           = 40
      image_id                   = data.alicloud_images.default.images.0.id
      vswitch_id                 = alicloud_vswitch.vswitch2.id
      password                   = var.ecs_instance_password
      instance_type              = var.ecs_instance_type_2
      internet_max_bandwidth_out = 5
      security_groups            = [alicloud_security_group.security_group.id]
      availability_zone          = var.zone_id_2
    }

    # PolarDB Cluster
    resource "alicloud_polardb_cluster" "polar_db_cluster" {
      db_type            = "MySQL"
      db_version         = "8.0"
      db_node_class      = var.polar_db_node_class
      pay_type           = "PostPaid"
      vswitch_id         = alicloud_vswitch.vswitch3.id
      description        = "PolarDB-${local.common_name}"
      zone_id            = var.zone_id_1
      security_ips       = [var.vpc_cidr_block]
      vpc_id             = alicloud_vpc.vpc.id
      security_group_ids = [alicloud_security_group.security_group.id]
    }

    # PolarDB Database
    resource "alicloud_polardb_database" "polar_db_instance" {
      db_cluster_id      = alicloud_polardb_cluster.polar_db_cluster.id
      db_name            = "flashsale"
      character_set_name = "utf8"
    }

    # PolarDB Account
    resource "alicloud_polardb_account" "polar_db_account" {
      db_cluster_id    = alicloud_polardb_cluster.polar_db_cluster.id
      account_name     = var.polar_account_name
      account_password = var.db_password
      account_type     = "Normal"
      depends_on       = [alicloud_polardb_database.polar_db_instance]
    }

    # PolarDB Account Privilege
    resource "alicloud_polardb_account_privilege" "polar_db_account_privilege" {
      db_cluster_id     = alicloud_polardb_cluster.polar_db_cluster.id
      account_name      = alicloud_polardb_account.polar_db_account.account_name
      account_privilege = "ReadWrite"
      db_names          = [alicloud_polardb_database.polar_db_instance.db_name]
      depends_on        = [alicloud_polardb_account.polar_db_account]
    }

    # ALB Load Balancer
    resource "alicloud_alb_load_balancer" "load_balancer" {
      load_balancer_name     = "ALB-${local.common_name}"
      load_balancer_edition  = "Basic"
      address_type           = "Internet"
      address_allocated_mode = "Fixed"
      vpc_id                 = alicloud_vpc.vpc.id

      zone_mappings {
        zone_id    = var.zone_id_1
        vswitch_id = alicloud_vswitch.vswitch.id
      }

      zone_mappings {
        zone_id    = var.zone_id_2
        vswitch_id = alicloud_vswitch.vswitch2.id
      }

      load_balancer_billing_config {
        pay_type = "PayAsYouGo"
      }
    }

    # ALB Server Group
    resource "alicloud_alb_server_group" "server_group" {
      server_group_name = "ServerGroup-${local.common_name}"
      server_group_type = "Instance"
      vpc_id            = alicloud_vpc.vpc.id
      protocol          = "HTTP"
      scheduler         = "Wrr"

      health_check_config {
        health_check_enabled = true
      }

      sticky_session_config {
        sticky_session_enabled = false
      }

      servers {
        server_id   = alicloud_instance.ecs_instance_group1.id
        server_type = "Ecs"
        port        = 80
        weight      = 100
      }

      servers {
        server_id   = alicloud_instance.ecs_instance_group2.id
        server_type = "Ecs"
        port        = 80
        weight      = 100
      }
    }

    # ALB Listener
    resource "alicloud_alb_listener" "listener" {
      load_balancer_id  = alicloud_alb_load_balancer.load_balancer.id
      listener_protocol = "HTTP"
      listener_port     = 80

      default_actions {
        type = "ForwardGroup"
        forward_group_config {
          server_group_tuples {
            server_group_id = alicloud_alb_server_group.server_group.id
          }
        }
      }
    }

    # Redis Instance
    resource "alicloud_kvstore_instance" "redis_instance" {
      db_instance_name  = "flashsale_redis-${local.common_name}"
      instance_class    = var.redis_class
      engine_version    = "7.0"
      password          = var.redis_password
      payment_type      = "PostPaid"
      vswitch_id        = alicloud_vswitch.vswitch.id
      zone_id           = var.zone_id_1
      secondary_zone_id = var.zone_id_2
      security_ips      = [var.vpc_cidr_block]
    }

    # MSE Cluster
    resource "alicloud_mse_cluster" "mse_micro_registry_instance" {
      cluster_specification = "MSE_SC_1_2_60_c"
      cluster_type          = "Nacos-Ans"
      cluster_version       = "NACOS_2_0_0"
      instance_count        = 1
      net_type              = "privatenet"
      vswitch_id            = alicloud_vswitch.vswitch.id
      cluster_alias_name    = "my_nacos-${local.common_name}"
      mse_version           = "mse_dev"
      pub_network_flow      = "0"
      vpc_id                = alicloud_vpc.vpc.id
    }

    output "mse" {
      value = alicloud_mse_cluster.mse_micro_registry_instance
    }

    # RocketMQ Instance
    resource "alicloud_rocketmq_instance" "rocketmq" {
      instance_name = "ROCKETMQ5-${local.common_name}"
      payment_type  = "PayAsYouGo"
      service_code  = "rmq"
      product_info {
        msg_process_spec       = "rmq.s2.2xlarge"
        message_retention_time = 72
      }
      network_info {
        vpc_info {
          vpc_id = alicloud_vpc.vpc.id
          vswitches {
            vswitch_id = alicloud_vswitch.vswitch.id
          }
        }
        internet_info {
          internet_spec = "disable"
          flow_out_type = "uninvolved"
        }
      }
      series_code     = "standard"
      sub_series_code = "cluster_ha"
    }

    # RocketMQ Topics
    resource "alicloud_rocketmq_topic" "topic1" {
      instance_id  = alicloud_rocketmq_instance.rocketmq.id
      topic_name   = "order-fail-after-pre-deducted-inventory"
      message_type = "NORMAL"
      remark       = "预扣库存成功后订单创建失败"
    }

    resource "alicloud_rocketmq_topic" "topic2" {
      instance_id  = alicloud_rocketmq_instance.rocketmq.id
      topic_name   = "order-fail-after-deducted-inventory"
      message_type = "NORMAL"
      remark       = "库存系统扣减库存成功后订单创建失败"
    }

    resource "alicloud_rocketmq_topic" "topic3" {
      instance_id  = alicloud_rocketmq_instance.rocketmq.id
      topic_name   = "order-success"
      message_type = "TRANSACTION"
      remark       = "订单创建成功"
    }

    # RocketMQ Consumer Group
    resource "alicloud_rocketmq_consumer_group" "consumer_group" {
      consumer_group_id = "flashsale-service-consumer-group"
      instance_id       = alicloud_rocketmq_instance.rocketmq.id
      consume_retry_policy {
        retry_policy    = "DefaultRetryPolicy"
        max_retry_times = 5
      }
      delivery_order_type = "Concurrently"
    }

    # ECS Command for Installation
    resource "alicloud_ecs_command" "install_command" {
      name            = "install-flashsale-${local.common_name}"
      description     = "Install flashsale system"
      type            = "RunShellScript"
      command_content = base64encode(local.install_script)
      timeout         = 3600
      working_dir     = "/root"
    }

    # Execute installation on ECS instances
    resource "alicloud_ecs_invocation" "install_on_ecs1" {
      instance_id = [alicloud_instance.ecs_instance_group1.id]
      command_id  = alicloud_ecs_command.install_command.id
      depends_on = [
        alicloud_rocketmq_consumer_group.consumer_group,
        alicloud_mse_cluster.mse_micro_registry_instance,
        alicloud_polardb_cluster.polar_db_cluster,
        alicloud_kvstore_instance.redis_instance,
        alicloud_rocketmq_topic.topic1,
        alicloud_rocketmq_topic.topic2,
        alicloud_rocketmq_topic.topic3
      ]
      timeouts {
        create = "30m"
      }
    }

    resource "alicloud_ecs_invocation" "install_on_ecs2" {
      instance_id = [alicloud_instance.ecs_instance_group2.id]
      command_id  = alicloud_ecs_command.install_command.id
      depends_on = [
        alicloud_rocketmq_consumer_group.consumer_group,
        alicloud_mse_cluster.mse_micro_registry_instance,
        alicloud_polardb_cluster.polar_db_cluster,
        alicloud_kvstore_instance.redis_instance,
        alicloud_rocketmq_topic.topic1,
        alicloud_rocketmq_topic.topic2,
        alicloud_rocketmq_topic.topic3,
        alicloud_ecs_invocation.install_on_ecs1
      ]
      timeouts {
        create = "30m"
      }
    }
  output.tf: |-
    # Outputs
    output "alb_public_ip_address" {
      description = "秒杀系统商品详情页面地址"
      value       = "http://${alicloud_alb_load_balancer.load_balancer.dns_name}/product/1001.htm"
    }

    output "ecs_login_address" {
      description = "ECS登录地址，用于并发请求与压力测试"
      value       = "https://ecs-workbench.aliyun.com/?from=EcsConsole&instanceType=ecs&regionId=${data.alicloud_regions.current.regions[0].id}&instanceId=${alicloud_instance.ecs_instance_group1.id}"
    }