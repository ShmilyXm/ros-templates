ROSTemplateFormatVersion: '2015-09-01'
Transform: Aliyun::Terraform-v1.5
Description:
  zh-cn:
    创建ECS与阿里云MongoDB，配置安全组与网络，通过ECS自建MongoDB数据库，设置DTS同步用户，实现ECS自建数据库向阿里云MongoDB平滑迁移。
  en: Create ECS and Aliyun MongoDB, configure security groups and networks, 
    build your own MongoDB database through ECS, set up DTS to synchronize 
    users, and achieve smooth migration of ECS self-built database to Aliyun 
    MongoDB.
Metadata:
  ALIYUN::ROS::Interface:
    ParameterGroups:
    - Parameters:
      - zone_id
      - ecs_instance_type
      - ecs_instance_password
      - db_name
      - db_user_name
      - db_password
      Label:
        default: ECS
    - Parameters:
      - mongodb_instance_class
      - mongodb_password
      Label:
        default: MongoDB
    TemplateTags:
    - acs:technical-solution:database:ECS自建MongoDB迁移上云-tech_solu_267
    Hidden:
    - vpc_cidr_block
    - vswitch_cidr_block
Parameters:
  db_user_name:
    Type: String
    Label:
      en: Create Own MongoDB Username
      zh-cn: 自建MongoDB数据库账号
    Required: true
    ConstraintDescription:
      en: Consist of 2 to 16 characters of lowercase letters, underline. Must 
        begin with a letter and be end with an alphanumeric character.
      zh-cn: 由小写字母、大写字母、数字、下划线（_）组成，以字母开头，以字母或数字结尾，最多32个字符。
  db_password:
    Type: String
    Label:
      en: Create Own MongoDB Database Password
      zh-cn: 自建MongoDB数据库密码
    Description:
      en: "The password must be 8 to 32 characters in length. <br>\nIt must contain
        the following character types: uppercase letters, lowercase letters, digits,
        and special characters. <br> \nSpecial characters include <span style=\"background:#E7E9EB;\"\
        ><b>!@#$%^&*()_+-=</b></span>.<br>\n<b>If you repeatedly provision in this
        tutorial on the same ECS instance, make sure that the MySQL database password
        is exactly the same as the password set when the template was executed for
        the first time. Otherwise, the result of provisioning is unavailable.</b>"
      zh-cn: 长度为8~32位，需包含大写字母、小写字母、特殊字符和数字，允许的特殊字符包括<span 
        style="background:#E7E9EB;"><b>!@#$%^&*()_+-=</b></span>。<br>
    AssociationProperty: ALIYUN::RDS::Instance::AccountPassword
    NoEcho: true
  db_name:
    Type: String
    Default: mongodb_transfer_test
    Label:
      en: Create Own MongoDB Name
      zh-cn: 自建MongoDB数据库名称
    Required: true
    AllowedPattern:
      ^(?!admin\b|config\b|local\b|test\b)([a-z][a-z0-9_-]{0,62}[a-z0-9])$
    ConstraintDescription:
      en: The name must be 2 to 64 characters in length. The name must start 
        with a lowercase letter and end with a lowercase letter or digit. The 
        name can contain lowercase letters, digits, underscores (_), and hyphens
        (-).
      zh-cn: 由小写字母、数字、下划线（_）、中划线（-）组成，以小写字母开头，小写字母或数字结尾，最多64个字符。数据库名称在实例内必须是唯一的。
  mongodb_instance_class:
    Type: String
    Description:
      en: The MongoDB Instance type
      zh-cn: MongoDB 实例规格
    Label:
      en: MongoDB Instance type
      zh-cn: MongoDB 实例规格
    AssociationProperty: ALIYUN::MongoDB::Instance::InstanceType
    AssociationPropertyMetadata:
      ZoneId: ${zone_id}
  zone_id:
    AssociationProperty: ALIYUN::ECS::Instance::ZoneId
    Type: String
    Description:
      zh-cn: 用于创建ECS和RDS的可用区。
      en: Availability zone.
    Label:
      zh-cn: 可用区
      en: Availability Zone.
  ecs_instance_type:
    Type: String
    Label:
      zh-cn: ECS实例类型
      en: ECS instance type.
    AssociationProperty: ALIYUN::ECS::Instance::InstanceType
    AssociationPropertyMetadata:
      SystemDiskCategory: cloud_essd
      InstanceChargeType: PostPaid
      ZoneId: ${zone_id}
    Default: ecs.e-c1m2.large
  ecs_instance_password:
    NoEcho: true
    Type: String
    Description:
      en: Server login password, Length 8-30, must contain three(Capital 
        letters, lowercase letters, numbers, ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ 
        Special symbol in).
      zh-cn: 服务器登录密码,长度8-30，必须包含三项（大写字母、小写字母、数字、 ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ 
        中的特殊符号）。
    Label:
      zh-cn: ECS实例密码
      en: ECS Instance Password
    MaxLength: 30
    MinLength: 8
    ConstraintDescription: 长度8-30，必须包含三项（大写字母、小写字母、数字、 
      ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ 中的特殊符号）。
    AllowedPattern: "[0-9A-Za-z\\_\\-\\&:;'<>,=%`~!@#\\(\\)\\$\\^\\*\\+\\|\\{\\}\\\
      [\\]\\.\\?\\/]+$"
  mongodb_password:
    NoEcho: true
    Type: String
    MaxLength: 32
    MinLength: 6
    Description:
      en: 'MongoDB Root Password, length 6~32 characters. Can contain English letters,
        numbers and special characters! #$%^&*()_+-=.'
      zh-cn: MongoDB Root 密码,长度为6~32个字符。可包含英文字母、数字和特殊字符!#$%^&*()_+-=。
    Label:
      zh-cn: MongoDB Root 密码
      en: MongoDB Root Password
    ConstraintDescription: 长度为6~32个字符。可包含英文字母、数字和特殊字符!#$%^&*()_+-=。
    AllowedPattern: "[0-9A-Za-z\\_\\-\\&:;'<>,=%`~!@#\\(\\)\\$\\^\\*\\+\\|\\{\\}\\\
      [\\]\\.\\?\\/]+$"
Workspace:
  variable.tf: |-
    # Parameters
    variable "zone_id" {
      type        = string
      description = "请输入可用区ID（例如：cn-hangzhou-k）。请确保该可用区支持您要创建的ECS和MongoDB资源规格。"
      default     = "cn-hangzhou-j"
    }

    variable "vpc_cidr_block" {
      description = "请输入VPC的CIDR块（支持的值包括：192.168.0.0/16、172.16.0.0/12、10.0.0.0/8）。这是您的虚拟私有云的地址范围。"
      default     = "192.168.0.0/16"
      validation {
        condition     = contains(["192.168.0.0/16", "172.16.0.0/12", "10.0.0.0/8"], var.vpc_cidr_block)
        error_message = "无效的VPC CIDR块，请检查并重新输入。"
      }
    }

    variable "vswitch_cidr_block" {
      description = "请输入交换机的CIDR块（例如：192.168.0.0/24）。这是您虚拟交换机的地址范围。"
      default     = "192.168.0.0/24"
    }

    variable "ecs_instance_type" {
      description = "请输入ECS实例类型（例如：ecs.e-c1m2.large）。请根据实际需求选择合适的实例规格。"
      default     = "ecs.e-c1m2.large"
    }

    variable "ecs_instance_password" {
      description = "请输入服务器登录密码。密码长度为8-30位，必须包含大写字母、小写字母、数字和特殊字符（如：!@#$%^&*_-+=|{}[]:;'<>,.?/）。"
      type        = string
      sensitive   = true
      validation {
        condition     = length(var.ecs_instance_password) >= 8 && length(var.ecs_instance_password) <= 30 && can(regex("^[0-9A-Za-z\\_\\-\\&:;'<>,=%`~!@#\\(\\)\\$\\^\\*\\+\\|\\{\\}\\[\\]\\.\\?\\/]+$", var.ecs_instance_password))
        error_message = "密码长度必须在8-30个字符之间，只能包含英文字母、数字和特殊字符!@#$%^&*()_+-=|{}[]:;'<>,.?/~`%=。"
      }
    }

    variable "db_name" {
      description = "请输入自建MongoDB数据库名称（由小写字母、数字及特殊字符 -_ 组成，以小写字母开头，小写字母或数字结尾，最多64个字符）。"
      default     = "mongodb_transfer_test"
      validation {
        condition     = can(regex("^([a-z][a-z0-9_-]{0,62}[a-z0-9])$", var.db_name)) && !contains(["admin", "config", "local", "test"], var.db_name)
        error_message = "数据库名称格式不正确。名称应由小写字母、数字及特殊字符 -_ 组成，以小写字母开头，小写字母或数字结尾，最多64个字符，且不能为admin、config、local、test。"
      }
    }

    variable "db_user_name" {
      description = "请输入自建MongoDB数据库账号（长度为2-16个字符，仅允许小写字母、大写字母、数字和下划线，必须以字母开头，以字母或数字结尾）。"
      type        = string
      default     = "mongouser"
      validation {
        condition     = length(var.db_user_name) >= 2 && length(var.db_user_name) <= 16 && can(regex("^[a-zA-Z][a-zA-Z0-9_]*[a-zA-Z0-9]$", var.db_user_name))
        error_message = "用户名格式不正确。用户名应由字母、数字和下划线组成，必须以字母开头，以字母或数字结尾，长度为2-16个字符。"
      }
    }

    variable "db_password" {
      description = "请输入自建MongoDB数据库密码。密码长度为8-32位，需包含大写字母、小写字母、数字和特殊字符（如：!@#$%^&*()_+-=）。"
      type        = string
      sensitive   = true
      validation {
        condition     = length(var.db_password) >= 8 && length(var.db_password) <= 32 && can(regex("^[0-9A-Za-z\\_\\-\\&:;'<>,=%`~!@#\\(\\)\\$\\^\\*\\+\\|\\{\\}\\[\\]\\.\\?\\/]+$", var.db_password))
        error_message = "密码长度必须在8-32个字符之间，只能包含英文字母、数字和特殊字符!@#$%^&*()_+-=|{}[]:;'<>,.?/~`%=。"
      }
    }

    variable "mongodb_instance_class" {
      description = "请输入MongoDB实例规格（例如：dds.mongo.mid）。根据您的数据库负载选择合适的规格。"
      type        = string
      default     = "mdb.shard.2x.xlarge.d"
    }

    variable "mongodb_password" {
      description = "请输入MongoDB Root密码。密码长度为6-32位，需包含大写字母、小写字母、数字和特殊字符（如：!@#$%^&*()_+-=）。"
      type        = string
      sensitive   = true
      validation {
        condition     = length(var.mongodb_password) >= 6 && length(var.mongodb_password) <= 32 && can(regex("^[0-9A-Za-z\\_\\-\\&:;'<>,=%`~!@#\\(\\)\\$\\^\\*\\+\\|\\{\\}\\[\\]\\.\\?\\/]+$", var.mongodb_password))
        error_message = "MongoDB Root密码长度必须在6-32个字符之间，只能包含英文字母、数字和特殊字符!@#$%^&*()_+-=|{}[]:;'<>,.?/~`%=。"
      }
    }
  main.tf: |-
    provider "alicloud" {
    }

    data "alicloud_images" "default" {
      name_regex  = "^aliyun_3_x64_20G_alibase_.*"
      most_recent = true
      owners      = "system"
    }

    resource "random_id" "suffix" {
      byte_length = 8
    }

    locals {
      common_name = random_id.suffix.id
      ecs_command = <<SHELL
    #!/bin/bash
    cat << INNER_EOF >> ~/.bash_profile
    export DB_NAME=${var.db_name}
    export DB_USERNAME=${var.db_user_name}
    export DB_PASSWORD=${var.db_password}
    export ROS_DEPLOY=true
    INNER_EOF

    source ~/.bash_profile

    curl -fsSL https://help-static-aliyun-doc.aliyuncs.com/install-script/ecs-mongo-to-cloud/install_init.sh|bash
    SHELL
    }

    # VPC Resources
    resource "alicloud_vpc" "vpc" {
      vpc_name   = "VPC_HZ"
      cidr_block = var.vpc_cidr_block
    }

    resource "alicloud_vswitch" "vswitch" {
      vpc_id       = alicloud_vpc.vpc.id
      cidr_block   = var.vswitch_cidr_block
      zone_id      = var.zone_id
      vswitch_name = "vsw_001"
    }

    # Security Group
    resource "alicloud_security_group" "security_group" {
      vpc_id              = alicloud_vpc.vpc.id
      security_group_name = "sg-mongodb-${local.common_name}"
      security_group_type = "normal"
    }

    # Security Group Rules
    resource "alicloud_security_group_rule" "http" {
      type              = "ingress"
      ip_protocol       = "tcp"
      port_range        = "80/80"
      cidr_ip           = "0.0.0.0/0"
      security_group_id = alicloud_security_group.security_group.id
    }

    resource "alicloud_security_group_rule" "rdp" {
      type              = "ingress"
      ip_protocol       = "tcp"
      port_range        = "3389/3389"
      cidr_ip           = "0.0.0.0/0"
      security_group_id = alicloud_security_group.security_group.id
    }

    resource "alicloud_security_group_rule" "mongodb_ingress" {
      type              = "ingress"
      ip_protocol       = "tcp"
      port_range        = "27017/27017"
      cidr_ip           = "0.0.0.0/0"
      security_group_id = alicloud_security_group.security_group.id
    }

    resource "alicloud_security_group_rule" "mongodb_egress" {
      type              = "egress"
      ip_protocol       = "tcp"
      port_range        = "27017/27017"
      cidr_ip           = "0.0.0.0/0"
      security_group_id = alicloud_security_group.security_group.id
    }

    # MongoDB Resources
    resource "alicloud_mongodb_instance" "mongodb" {
      engine_version      = "8.0"
      db_instance_class   = var.mongodb_instance_class
      db_instance_storage = 20
      name                = "mongodb_test"
      account_password    = var.mongodb_password
      security_ip_list    = [var.vpc_cidr_block]
      zone_id             = var.zone_id
      vpc_id              = alicloud_vpc.vpc.id
      vswitch_id          = alicloud_vswitch.vswitch.id
      storage_engine      = "WiredTiger"
      storage_type        = "cloud_essd1"
    }

    # ECS Resources
    resource "alicloud_instance" "mongodb_server" {
      instance_name              = "mongodb-server-${local.common_name}"
      system_disk_category       = "cloud_essd"
      image_id                   = data.alicloud_images.default.images[0].id
      vswitch_id                 = alicloud_vswitch.vswitch.id
      password                   = var.ecs_instance_password
      instance_type              = var.ecs_instance_type
      internet_max_bandwidth_out = 5
      security_groups            = [alicloud_security_group.security_group.id]
      availability_zone          = var.zone_id
    }

    resource "alicloud_ecs_command" "run_command" {
      name             = "install-mongodb-${local.common_name}"
      description      = "install_mongodb_${local.common_name}_description"
      enable_parameter = false
      type             = "RunShellScript"
      command_content  = base64encode(local.ecs_command)
      timeout          = 3600
      working_dir      = "/root"
    }

    resource "alicloud_ecs_invocation" "install_mongodb" {
      instance_id = [alicloud_instance.mongodb_server.id]
      command_id  = alicloud_ecs_command.run_command.id
      depends_on  = [alicloud_mongodb_instance.mongodb, alicloud_instance.mongodb_server]
      timeouts {
        create = "10m"
      }
    }
  output.tf: |-
    # Outputs
    output "mongodb_inner_connection_string" {
      description = "MongoDB内网连接地址"
      value       = "mongodb://root:${var.mongodb_password}@${alicloud_mongodb_instance.mongodb.replica_sets[0].connection_domain}:27017/${var.db_name}"
      sensitive   = true
    }